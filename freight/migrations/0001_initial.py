# Generated by Django 2.2.5 on 2019-10-04 21:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eveonline', '0010_alliance_ticker'),
        ('authentication', '0016_ownershiprecord'),
    ]

    operations = [
        migrations.CreateModel(
            name='Freight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'default_permissions': (),
                'permissions': (('basic_access', 'Can access this app'), ('create_service', 'Can create / update a freight service'), ('use_calculator', 'Can use the calculator'), ('view_contracts', 'Can view the contracts list'), ('add_location', 'Can add / update locations'), ('view_statistics', 'Can view freight statistics')),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('solar_system_id', models.IntegerField(blank=True, default=None, null=True)),
                ('type_id', models.IntegerField(blank=True, default=None, null=True)),
                ('category_id', models.IntegerField(choices=[(3, 'station'), (65, 'structure'), (0, '(unknown)')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ContractsHandler',
            fields=[
                ('alliance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='eveonline.EveAllianceInfo')),
                ('version_hash', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('last_sync', models.DateTimeField(blank=True, default=None, null=True)),
                ('character', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='authentication.CharacterOwnership')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_id', models.IntegerField()),
                ('collateral', models.FloatField()),
                ('date_accepted', models.DateTimeField(default=None, null=True)),
                ('date_completed', models.DateTimeField(default=None, null=True)),
                ('date_expired', models.DateTimeField()),
                ('date_issued', models.DateTimeField()),
                ('days_to_complete', models.IntegerField()),
                ('for_corporation', models.BooleanField()),
                ('price', models.FloatField()),
                ('reward', models.FloatField()),
                ('status', models.CharField(choices=[('outstanding', 'outstanding'), ('in_progress', 'in progress'), ('finished_issuer', 'finished issuer'), ('finished_contractor', 'finished contractor'), ('finished', 'finished'), ('canceled', 'canceled'), ('rejected', 'rejected'), ('failed', 'failed'), ('deleted', 'deleted'), ('reversed', 'reversed')], max_length=32)),
                ('title', models.CharField(default=None, max_length=100, null=True)),
                ('volume', models.FloatField()),
                ('acceptor', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contract_acceptor', to='eveonline.EveCharacter')),
                ('end_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_end_location', to='freight.Location')),
                ('handler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='freight.ContractsHandler')),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_issuer', to='eveonline.EveCharacter')),
                ('issuer_corporation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_issuer', to='eveonline.EveCorporationInfo')),
                ('start_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_start_location', to='freight.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('price_base', models.FloatField(blank=True, default=0)),
                ('price_per_volume', models.FloatField(blank=True, default=0)),
                ('price_per_collateral_percent', models.FloatField(blank=True, default=0)),
                ('collateral_min', models.BigIntegerField(blank=True, default=0)),
                ('collateral_max', models.BigIntegerField(blank=True, default=None, null=True)),
                ('volume_max', models.FloatField(blank=True, default=None, null=True)),
                ('days_to_expire', models.IntegerField(blank=True, default=None, null=True)),
                ('days_to_complete', models.IntegerField(blank=True, default=None, null=True)),
                ('details', models.TextField(blank=True, default=None, null=True)),
                ('end_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_end_location', to='freight.Location')),
                ('start_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_start_location', to='freight.Location')),
            ],
            options={
                'unique_together': {('start_location', 'end_location')},
            },
        ),
        migrations.AddIndex(
            model_name='contract',
            index=models.Index(fields=['status'], name='freight_con_status_b4eb08_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contract',
            unique_together={('handler', 'contract_id')},
        ),
    ]
